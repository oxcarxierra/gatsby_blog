{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/making_static_app_with_nextjs","result":{"data":{"markdownRemark":{"id":"db2c47dc-a394-531f-ab46-bbdbb353f23b","html":"<p>NextJs는 React 기반 웹 프레임워큰데, 서버 사이드 렌더링(SSR)을 지원한다는 점에서 속도면과 검색 엔진 최적화(SEO)면에서 유리하다. 그래서 사용자와 인터랙션이 없는 정적 웹사이트를 구현할 때 유용하다. 이번에 웹페이지를 Next.js로 제작하면서 사용했던 라이브러리와 팁을 적어봤다.</p>\n<h2 id=\"aos-animate-on-scroll-라이브러리\" style=\"position:relative;\"><a href=\"#aos-animate-on-scroll-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC\" aria-label=\"aos animate on scroll 라이브러리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AOS (Animate on scroll) 라이브러리</h2>\n<p>사용자가 페이지를 스크롤할 때 맞춰서 컴포넌트에 애니메이션을 주는 상당히 간단하고도 유용한 라이브러리가 있길래 써봤다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> aos@next\nor <span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save aos@next</code></pre></div>\n<p>우선 _app.tsx에 전체적인 aos 설정을 해주도록 아래의 코드를 추가해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">AOS</span><span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    startEvent<span class=\"token operator\">:</span> <span class=\"token string\">'DOMContentLoaded'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// name of the event dispatched on the document, that AOS should initialize on</span>\n    easing<span class=\"token operator\">:</span> <span class=\"token string\">'ease-out-cubic'</span><span class=\"token punctuation\">,</span>\n    once<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    offset<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>\n    duration<span class=\"token operator\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// values from 0 to 3000, with step 50ms</span>\n    mirror<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이후 내가 애니메이션을 넣고 싶은 컴포넌트에 이렇게 사용하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>Container\n  type<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>index <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span>\n  id<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n  data<span class=\"token operator\">-</span>aos<span class=\"token operator\">=</span><span class=\"token string\">\"fade-right\"</span>\n  data<span class=\"token operator\">-</span>aos<span class=\"token operator\">-</span>offset<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>index <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// 위에서부터 순서대로 애니메이션 적용</span>\n<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Container<span class=\"token operator\">></span></code></pre></div>\n<p>data-aos는 애니메이션 종류를, data-aos-offset은 에니메이션 순서를 정해준다. 먼저 실행하고 싶은 컴포넌트의 값을 작게, 나중에 실행하고 싶은 컴포넌트의 값은 크게 설정해주면 된다.</p>\n<blockquote>\n<blockquote>\n<p><a href=\"https://michalsnik.github.io/aos/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AOS Demo</a></p>\n</blockquote>\n</blockquote>\n<h2 id=\"react-slider-라이브러리\" style=\"position:relative;\"><a href=\"#react-slider-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC\" aria-label=\"react slider 라이브러리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>react-slider 라이브러리</h2>\n<p>react app에 좌우로 넘기는 슬라이더를 제공하는 매우매우 유명한 라이브러리다. 라이브러리 공홈도 있고 전반적으로 설명이 매우 잘되어있다…만, 네비게이션 관련해서 삽질하다가 알아낸 한가지가 있다. 좌우로 넘기는 버튼(navigation)을 커스텀화 해서 사용하고 싶을때, 기본적으로 제공하는 navigation component의 background-image를 바꾸는 방식이 많이 소개가 되어 있다. 하지만 더 쉬운 방법이 있는데..<br>\n그냥 내가 navigation으로 사용하고 싶은 컴포넌트에 className만 달아주면 된다! 이전 버튼(&#x3C;) 은 <code class=\"language-text\">className=\"swiper-button-prev\"</code>을, 다음 버튼(>)은 <code class=\"language-text\">className=\"swiper-button-next\"</code>을 추가해주면 된다.</p>\n<blockquote>\n<blockquote>\n<p><a href=\"https://swiperjs.com/react\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">react-slider 공홈</a></p>\n</blockquote>\n</blockquote>\n<h2 id=\"styled-components-라이브러리\" style=\"position:relative;\"><a href=\"#styled-components-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC\" aria-label=\"styled components 라이브러리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>styled-components 라이브러리</h2>\n<p>css를 대체할 용도로 styled-components를 사용했다. 이러면 .tsx 파일 안에 스타일도 넣을 수 있어서 가독성이 좋아지고 정리가 편해진다. 다만 Next.js에서 이 라이브러리를 이용하려면 반드시 pages 폴더 안에 아래와 같은 _document.tsx를 추가해주어야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> Document<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> DocumentContext<span class=\"token punctuation\">,</span> DocumentInitialProps <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next/document'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ServerStyleSheet <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyDocument</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Document</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">async</span> <span class=\"token function\">getInitialProps</span><span class=\"token punctuation\">(</span>\n    ctx<span class=\"token operator\">:</span> DocumentContext\n  <span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>DocumentInitialProps<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> sheet <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServerStyleSheet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> originalRenderPage <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span>renderPage<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">renderPage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n        <span class=\"token function\">originalRenderPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          <span class=\"token function-variable function\">enhanceApp</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n            sheet<span class=\"token punctuation\">.</span><span class=\"token function\">collectStyles</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> initialProps <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Document<span class=\"token punctuation\">.</span><span class=\"token function\">getInitialProps</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span>initialProps<span class=\"token punctuation\">,</span>\n        styles<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n            <span class=\"token punctuation\">{</span>initialProps<span class=\"token punctuation\">.</span>styles<span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">{</span>sheet<span class=\"token punctuation\">.</span><span class=\"token function\">getStyleElement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n      sheet<span class=\"token punctuation\">.</span><span class=\"token function\">seal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>아마 Next.js가 SSR을 지원하기 때문에 서버에서 렌더링할 때 styled-components로 작성한 css까지 적용되게 하는 코드인 것 같다. 아무튼 이걸 넣으니까 잘 동작했다. 굳굳</p>\n<p>그래서 약간의 노가다를 거친 결과 웹페이지를 만들 수 있었다. 꽤나 퀄리티에 만족한다 ㅎㅎ</p>\n<blockquote>\n<blockquote>\n<p><a href=\"https://doctor-i.co.kr\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">닥터아이 홈페이지</a></p>\n</blockquote>\n</blockquote>","fields":{"slug":"/posts/making_static_app_with_nextjs","tagSlugs":["/tag/next-js/"]},"frontmatter":{"date":"2021-10-14","description":"Next.js로 웹사이트를 만들고 aos, slider, styled-components를 사용해보자","tags":["Next.js"],"category":"Projects","title":"Next.js로 정적 웹사이트 만들기","socialImage":{"publicURL":"/static/aac190ab60d69e61ad7707c55ce0b40c/ryan.png"}}}},"pageContext":{"slug":"/posts/making_static_app_with_nextjs"}},"staticQueryHashes":["251939775","318792792","401334301"]}